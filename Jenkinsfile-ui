pipeline {
  agent { docker { image 'ci-agent' } }

  parameters {
    string(name: 'XRAY_PROJECT_KEY',  defaultValue: 'QT2',  description: 'Xray Project Key')
    string(name: 'XRAY_TESTPLAN_KEY', defaultValue: '',     description: 'Opsional: Test Plan Key (kosongkan jika tidak dipakai)')
  }

  environment {
    XRAY_CLIENT_ID     = credentials('xray-client-id')
    XRAY_CLIENT_SECRET = credentials('xray-client-secret')
  }

  stages {
    stage('Clone') {
      steps { checkout scm }
    }

    stage('Run Maven Test') {
      steps {
        sh '''
          set -e
          mkdir -p reports
          mvn -B clean test

          # pastikan minimal ada 1 file JUnit
          ls target/surefire-reports/TEST-*.xml >/dev/null 2>&1 || {
            echo "ERROR: Tidak ditemukan file JUnit di target/surefire-reports/TEST-*.xml"
            exit 1
          }
        '''
      }
      post {
        always {
          junit 'target/surefire-reports/*.xml'
          archiveArtifacts artifacts: 'target/surefire-reports/**', fingerprint: true
        }
      }
    }

    stage('Publish Results to Xray') {
      steps {
        sh '''
          set -eu
          mkdir -p reports

          # Auth ke Xray
          XRAY_TOKEN=$(
            printf '{"client_id":"%s","client_secret":"%s"}' "$XRAY_CLIENT_ID" "$XRAY_CLIENT_SECRET" |
            curl -fsS -X POST "https://xray.cloud.getxray.app/api/v2/authenticate" \
                 -H "Content-Type: application/json" \
                 --data @- | tr -d '"'
          )
          [ -n "$XRAY_TOKEN" ] || { echo "ERROR: gagal mendapatkan token Xray"; exit 1; }

          # Query string dinamis (tanpa info.json)
          QS="projectKey=${XRAY_PROJECT_KEY}"
          [ -n "${XRAY_TESTPLAN_KEY:-}" ] && QS="${QS}&testPlanKey=${XRAY_TESTPLAN_KEY}"

          # Import JUnit: multipart file saja (boleh banyak file)
          HTTP_CODE=$(
            curl -sS -w "%{http_code}" -o reports/xray-import.json \
              -X POST "https://xray.cloud.getxray.app/api/v2/import/execution/junit?${QS}" \
              -H "Authorization: Bearer $XRAY_TOKEN" \
              -H "Content-Type: multipart/form-data" \
              -F "file=@target/surefire-reports/TEST-*.xml"
          )

          case "$HTTP_CODE" in
            200|201) : ;;  # OK/Created
            *)  echo "ERROR: Xray import gagal (HTTP $HTTP_CODE)"
                echo "--- Response ---"
                cat reports/xray-import.json || true
                exit 1
                ;;
          esac
        '''
      }
      post {
        always {
          archiveArtifacts artifacts: 'reports/xray-import.json', fingerprint: true
        }
      }
    }
  }
}
