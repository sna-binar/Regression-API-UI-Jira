pipeline {
  agent { docker { image 'ci-agent' } }

  parameters {
    string(name: 'XRAY_PROJECT_KEY',  defaultValue: 'QT2',  description: 'Xray Project Key')
    string(name: 'XRAY_TESTPLAN_KEY', defaultValue: '',     description: 'Opsional: Test Plan Key (kosongkan jika tidak dipakai)')
  }

  environment {
    XRAY_CLIENT_ID     = credentials('xray-client-id')
    XRAY_CLIENT_SECRET = credentials('xray-client-secret')
  }

  stages {
    stage('Clone') {
      steps { checkout scm }
    }

    stage('Run Maven Test') {
      steps {
        dir('ui') {
          sh '''
            set -e
            mvn -B clean test
          '''
        }
      }
      post {
        always {
          junit 'ui/target/surefire-reports/*.xml'
          archiveArtifacts artifacts: 'ui/target/surefire-reports/**', fingerprint: true
        }
      }
    }

    stage('Publish Results to Xray') {
      steps {
        dir('ui') {
          sh '''
            set -eu
            mkdir -p reports

            # Auth ke Xray
            XRAY_TOKEN=$(
              printf '{"client_id":"%s","client_secret":"%s"}' "$XRAY_CLIENT_ID" "$XRAY_CLIENT_SECRET" |
              curl -fsS -X POST "https://xray.cloud.getxray.app/api/v2/authenticate" \
                   -H "Content-Type: application/json" --data @- | tr -d '"'
            )

            # Kumpulkan JUnit XML
            FILES=$(ls target/surefire-reports/TEST-*.xml 2>/dev/null || true)
            [ -n "$FILES" ] || { echo "Tidak ada JUnit report di target/surefire-reports"; exit 1; }

            # Query string
            QS="projectKey=${XRAY_PROJECT_KEY}"
            [ -n "${XRAY_TESTPLAN_KEY:-}" ] && QS="${QS}&testPlanKey=${XRAY_TESTPLAN_KEY}"

            # Susun argumen -F tanpa array
            CURL_ARGS=""
            for f in $FILES; do
              CURL_ARGS="$CURL_ARGS -F file=@$f"
            done

            # Upload (curl akan set Content-Type multipart otomatis)
            # shellcheck disable=SC2086
            HTTP_CODE=$(
              curl -sS -w "%{http_code}" -o reports/xray-import.json \
                -X POST "https://xray.cloud.getxray.app/api/v2/import/execution/junit?${QS}" \
                -H "Authorization: Bearer ${XRAY_TOKEN}" \
                $CURL_ARGS
            )

            [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ] || {
              echo "Xray import gagal (HTTP $HTTP_CODE)"
              cat reports/xray-import.json || true
              exit 1
            }
          '''
        }
      }
      post {
        always { archiveArtifacts artifacts: 'ui/reports/xray-import.json', fingerprint: true }
      }
    }
  }
}
