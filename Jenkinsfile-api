pipeline {
  agent {
    docker { image 'ci-agent' }
  }
  environment {
    TEST_PLAN_KEY = 'QT2-2'
  }
  stages {
    stage('Clone') {
      steps {
        checkout scm
      }
    }
    stage('API (Newman)') {
      steps {
        sh '''
          set -e
          mkdir -p reports
          # Jalankan koleksi Postman → hasilkan JUnit XML tunggal
          newman run api/*.postman_collection.json \
            -e api/*.postman_environment.json \
            --reporters cli,junit \
            --reporter-junit-export reports/junit-api.xml
        '''
      }
      post {
        always {
          // tampilkan hasil di Jenkins UI
          junit 'reports/*.xml'
          archiveArtifacts artifacts: 'reports/**', fingerprint: true
        }
      }
    }

    stage('Publish Results to Xray') {
      environment {
        XRAY_CLIENT_ID     = credentials('xray-client-id')
        XRAY_CLIENT_SECRET = credentials('xray-client-secret')
      }
      steps {
        sh '''
          set -e
          # 1) Auth → dapatkan Bearer token Xray Cloud
          XRAY_TOKEN=$(curl -s -X POST https://xray.cloud.getxray.app/api/v2/authenticate \
            -H "Content-Type: application/json" \
            -d "{\\"client_id\\": \\"$XRAY_CLIENT_ID\\", \\"client_secret\\": \\"$XRAY_CLIENT_SECRET\\"}" | tr -d '"')

          # 2) Siapkan info Test Execution
          cat > reports/info.json <<JSON
          {
            "fields": {
              "summary": "API Regression - Build ${BUILD_NUMBER}",
              "description": "Build URL: ${BUILD_URL}",
              "labels": ["api","regression"]
            },
            "testPlanKey": "${TEST_PLAN_KEY}",
            "testEnvironments": ["staging","api"]
          }
          JSON

          # 3) Import JUnit → buat Test Execution
          curl -s -X POST "https://xray.cloud.getxray.app/api/v2/import/execution/junit" \
            -H "Authorization: Bearer $XRAY_TOKEN" \
            -H "Content-Type: multipart/form-data" \
            -F "file=@reports/junit-api.xml" \
            -F "info=@reports/info.json;type=application/json" \
            -o reports/xray-import.json

          echo "Xray response:"; cat reports/xray-import.json
        '''
      }
      post {
        always { archiveArtifacts artifacts: 'reports/xray-import.json', fingerprint: true }
      }
    }
  }
}
