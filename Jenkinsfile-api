pipeline {
  agent {
    docker { image 'ci-agent' }
  }
  environment {
    TEST_PLAN_KEY = 'QT2-2'
  }
  stages {
    stage('Clone') {
      steps {
        checkout scm
      }
    }
    stage('API (Newman)') {
      steps {
        sh '''
          set -e
          mkdir -p reports
          # Jalankan koleksi Postman â†’ hasilkan JUnit XML tunggal
          newman run api/*.postman_collection.json \
            -e api/*.postman_environment.json \
            --reporters cli,junit \
            --reporter-junit-export reports/junit-api.xml
        '''
      }
      post {
        always {
          // tampilkan hasil di Jenkins UI
          junit 'reports/*.xml'
          archiveArtifacts artifacts: 'reports/**', fingerprint: true
        }
      }
    }
    stage('Publish Results to Xray') {
      environment {
        XRAY_CLIENT_ID     = credentials('xray-client-id')
        XRAY_CLIENT_SECRET = credentials('xray-client-secret')
      }
      steps {
        sh '''
    set -eu
    mkdir -p reports

    echo "[DEBUG] List reports sebelum upload:"; ls -lh reports || true
    [ -s reports/junit-api.xml ] || { echo "ERROR: reports/junit-api.xml not found/empty"; exit 1; }

    # 1) Tulis AUTH payload ke file (JSON VALID)
    cat > reports/auth.json <<EOF
    {"client_id":"$XRAY_CLIENT_ID","client_secret":"$XRAY_CLIENT_SECRET"}
    EOF

    # 2) Minta token (pakai --data @file supaya tidak perlu escape kutip)
    XRAY_TOKEN=$(curl -fsS -X POST "https://xray.cloud.getxray.app/api/v2/authenticate" \
      -H "Content-Type: application/json" \
      --data @reports/auth.json | tr -d '"')

    echo "[DEBUG] XRAY_TOKEN length: ${#XRAY_TOKEN}"
    [ -n "$XRAY_TOKEN" ] || { echo "ERROR: token kosong (cek Client ID/Secret & payload JSON)"; exit 1; }

    # 3) Tulis info.json (JSON VALID)
    cat > reports/info.json <<EOF
    {
      "fields": {
        "summary": "API Regression - Build ${BUILD_NUMBER}",
        "description": "Build URL: ${BUILD_URL}",
        "labels": ["api","regression"]
      },
      "testEnvironments": ["staging","api"],
      "testPlanKey": "${TEST_PLAN_KEY:-}"
    }
    EOF

    # 4) Import ke Xray (simpan response)
    HTTP_CODE=$(curl -sS -w "%{http_code}" -o reports/xray-import.json \
      -X POST "https://xray.cloud.getxray.app/api/v2/import/execution/junit" \
      -H "Authorization: Bearer ${XRAY_TOKEN}" \
      -H "Content-Type: multipart/form-data" \
      -F "file=@reports/junit-api.xml" \
      -F "info=@reports/info.json;type=application/json")

    echo "[DEBUG] HTTP_CODE=$HTTP_CODE"
    [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ] || { echo "Upload failed with HTTP $HTTP_CODE"; echo "--- Response ---"; cat reports/xray-import.json || true; exit 1; }

    echo "[DEBUG] Response -> reports/xray-import.json"
    head -c 1000 reports/xray-import.json || true
    '''
      }
      post {
        always { archiveArtifacts artifacts: 'reports/xray-import.json', fingerprint: true }
      }
    }
  }
}
